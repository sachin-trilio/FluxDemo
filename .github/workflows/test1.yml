# This is a basic workflow to help you get started with Actions

name: Test1

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: self-hosted

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a single command using the runners shell
      - name: Install kubectl
        run: | 
          curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
          sudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl

      # Load userInput through .env
      - name: Load env
        uses: xom9ikk/dotenv@v1.0.2
        with: 
          path: ".github/"

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        shell: bash
        run: |
          echo
          kubectl --kubeconfig "${GITHUB_WORKSPACE}/.github/SourceKubeconfig" get pods
          echo
          echo "UserInput"
          echo "Target: ${{ env.Target }}"
          echo "TargetNamespace: ${{ env.TargetNamespace }}"
          echo "SourceNamespace: ${{ env.SourceNamespace }}"
          echo "DestNamespace: ${{ env.DestNamespace }}"
          
      # Create BackupPlan
      - name: Create backup plan
        shell: bash
        run: |
          cat >> RunnerBackupPlan.yaml <<END 
          apiVersion: triliovault.trilio.io/v1
          kind: BackupPlan
          metadata:
            name: runner-backup-plan
            namespace: ${{ env.SourceNamespace }}
          spec:
            backupNamespace: ${{ env.SourceNamespace }}
            backupConfig:
              target:
                name: ${{ env.Target }}
                namespace: ${{ env.TargetNamespace }}
          END
        
      # Check BackupPlan 
      - name: Check backup plan
        shell: bash
        run: |
          cat RunnerBackupPlan.yaml  
          
      # Create Backup
      - name: Create backup 
        shell: bash
        run: |
          cat >> RunnerBackup.yaml <<END 
          apiVersion: triliovault.trilio.io/v1
          kind: Backup
          metadata:
            name: runner-backup
            namespace: ${{ env.SourceNamespace }}
          spec:
            type: Full
            scheduleType: Periodic
            backupPlan:
              name: runner-backup-plan
              namespace: ${{ env.SourceNamespace }}
          END
        
      # Check Backup 
      - name: Check backup 
        shell: bash
        run: |
          cat RunnerBackup.yaml  

      # Create BackupPlan and Backup
      - name: Create BacupPlan and Backup
        shell: bash
        run: |
          echo "Creating BackupPlan"
          $KUBECLI create -f RunnerBackupPlan.yaml
          sleep 10
          echo "Check BackupPlan"
          $KUBECLI get BackupPlan -n ${{ env.SourceNamespace }}
          echo "Creating Backup"
          $KUBECLI create -f RunnerBackup.yaml
          sleep 30
          echo "Check Backup"
          $KUBECLI get Backup -n ${{ env.SourceNamespace }}
        env:
          KUBECLI: kubectl --kubeconfig .github/SourceKubeconfig 
          
